syntax = "proto3";

package other98;

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

// TheOther98 service definition.
service TheOther98 {
    rpc GetFeed (FeedRequest) returns (FeedResponseView) {}
    rpc GetPost (GetRequest) returns (PostView) {}
    rpc GetProfile (GetRequest) returns (ProfileResponseView) {}
    rpc CreatePost (CreatePostRequest) returns (Result) {}
    rpc CreateComment (Comment) returns (Result) {}
    rpc VoteOnPost(PostVote) returns (Result) {}
    rpc VoteOnComment(CommentVote) returns (Result) {}

    //chat
    rpc GetMyConversations (GetRequest) returns (stream ConversationView) {}
    rpc GetConversation (GetRequest) returns (ConversationView) {}
    rpc GetMessagesInConversation (GetMessagesInConversationRequest) returns (stream MessageView) {}
    rpc GetNotifications (GetRequest) returns (stream NotificationBacklog) {}
    rpc CreateConversation (CreateConversationRequest) returns (Result) {}
    rpc SendMessage (SendMessageRequest) returns (Result) {}

    // demo methods
    rpc PopulateDatabase(Void) returns (Void) {}
}

message Void {

}

message GetRequest {
    string value = 1;
    string authToken = 2;
}

message FeedRequest {
    repeated string postTags = 1;
    string pageId = 2;
    int32 pageSize = 3;
    string authToken = 4;
}

message Result {
    StatusCode statusCode = 1;
    string errorMessage = 2;
    string createdId = 3;

    enum StatusCode {
        NONE = 0;
        OK = 1;
        UNAUTHORIZED = 2;
        FORBIDDEN = 3;
        NOT_FOUND = 4;
        INTERNAL_ERROR = 5;
    }
}

message PostSmallView {
    string title = 1;
    string description = 2;
    string featuredImageLink = 3;
    //string featuredVideoLink = 4;
    //string featuredCaption = 5;
    int64 createDate = 6;
    string type = 7;
    string authorHandle = 8;
}

message Post {
    PostSmallView postSmallView = 1;
    repeated ContentBlock contentBlocks = 2;
    repeated string postTags = 3;
}

message PostView {
    string id = 1;
    PostSmallView postSmallView = 2;
    repeated ContentBlock contentBlocks = 3;
    repeated string postTags = 4;
    repeated Comment comments = 5;
    int32 score = 6;
    int32 userVote = 7;
    repeated PostVote postVotes = 8;
    Result result = 9;
}

message PostFeedView {
    string postViewId = 1;
    PostSmallView postSmallView = 2;
    int64 numberOfComments = 3;
    int64 dateOfLastComment = 4;
    int32 score = 5;
    int32 userVote = 6;
}

message FeedResponseView {
    repeated PostFeedView postFeedViews = 1;
    string nextPageId = 2;
    Result result = 3;
}

message CreatePostRequest {
    Post post = 1;
    repeated string viewable_roles = 2;
}

message Profile {
  string handle = 1;
  //string firstName = 2;
  //string lastName = 3;
  //string description = 4;
  //string phone = 5;
  string email = 6;
  //string gender = 7;
  string type = 8;
  //string theme = 9;
}

message ProfileResponseView {
    Profile profile = 1;
    Result result = 2;
}

message ContentBlock {
    ContentBlockType type = 1;
    string content = 2;
    repeated ContentBlock children = 3;

    enum ContentBlockType {
        None = 0;
      Text = 1;
      Image = 2;
      ImageGallery = 3;
      Link = 4;
      Video = 5;
      Quote = 6;
    }
}

message Comment {
    int64 id = 1;
    string postViewId = 2;
    int64 createDateMillis = 3;
    string authorHandle = 4;
    //repeated ContentBlock contentBlocks = 5;
    string text = 5;
    int64 score = 6;
    repeated CommentVote commentVotes = 7;
}

message CommentView {
    Comment comment = 1;
    int32 userVote = 3;
}

message PostVote {
    string postViewId = 1;
    string userHandle = 2;
    int32 voteValue = 3;
}

message CommentVote {
    string postViewId = 1;
    int64 commentId = 2;
    string userHandle = 3;
    int32 voteValue = 4;
}
//END-social

//BEGIN-chat
message Message {
    string senderHandle = 1;
    string text = 2;
    string imageUrl = 3;
    string fileUrl = 4;
    string conversationId = 5;
    int64 createDate = 6;
}

message MessageView {
    string id = 1;
    Message message = 2;
}

message SendMessageRequest {
    string authToken = 1;
    Message message = 2;
}

message GetMessagesInConversationRequest {
    string conversationId = 1;
    string authToken = 2;
}

message Conversation {
    repeated string participantHandles = 1;
    string conversationName = 2;
    string iconImageUrl = 3;
    bool isPrivate = 4;
    string creatorHandle = 5;
}

message ConversationView {
    string id = 1;
    Conversation conversation = 2;
    Result result = 4;
}

message CreateConversationRequest {
    string authToken = 1;
    Conversation conversation = 2;
}

message NotificationBacklog {
    string userHandle = 1;
    string conversationId = 2;
    string numberOfMissedMessages = 3;
    MessageView lastMessage = 4;
}